events {

}

http {

    client_max_body_size 0;
    client_body_buffer_size     128K;
    client_header_buffer_size   128K;

    ignore_invalid_headers off;
    underscores_in_headers on;

    client_body_timeout   60;
    client_header_timeout 60;
    send_timeout          60;

    keepalive_requests      100;
    keepalive_timeout        65;
    types_hash_max_size    2048;
    recursive_error_pages    on;
    sendfile                 on;
    server_name_in_redirect off;
    server_tokens           off;
    variables_hash_max_size 1024;
    variables_hash_bucket_size 128;

    tcp_nodelay on;
    tcp_nopush  on;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    proxy_max_temp_file_size    0;
    proxy_connect_timeout      300;
    proxy_send_timeout         900;
    proxy_read_timeout         900;
    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
    proxy_intercept_errors     on;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Proxy "";

    server {
        server_name  {{ nexus_host }};
        listen       80;
        listen       443 ssl http2;
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
        ssl_certificate      /etc/nginx/certificate-bundle.crt;
        ssl_certificate_key  /etc/nginx/private.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_prefer_server_ciphers  on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ignore_invalid_headers off;
        client_max_body_size 0;
        server_tokens off;
        proxy_buffering off;

        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_pass  http://nexus:8081;
        }
    }

{% for key, value in nexus_repositories.iteritems() %}
    server {
        server_name  {{ nexus_host }};
        listen       {{ value["port"] }} ssl http2;
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
        ssl_certificate      /etc/nginx/certificate-bundle.crt;
        ssl_certificate_key  /etc/nginx/private.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_prefer_server_ciphers  on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ignore_invalid_headers off;
        client_max_body_size 0;
        server_tokens off;
        proxy_buffering off;

        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $http_host;
          proxy_http_version 1.1;
          proxy_set_header Connection "";
          proxy_pass  http://nexus:{{ value["port"] }};
	}
    }
{% endfor %}

}
